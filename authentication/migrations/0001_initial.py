# Generated by Django 4.1.5 on 2023-03-01 16:25

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Industry',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetropolitanArea',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobTitle',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                (
                    'industry',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='job_titles',
                        to='authentication.industry',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                (
                    'last_login',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='last login'
                    ),
                ),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        error_messages={
                            'unique': 'A user with that username already exists.'
                        },
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name='username',
                    ),
                ),
                (
                    'first_name',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='first name'
                    ),
                ),
                (
                    'last_name',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='last name'
                    ),
                ),
                (
                    'email',
                    models.EmailField(
                        blank=True, max_length=254, verbose_name='email address'
                    ),
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                (
                    'date_joined',
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name='date joined'
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    'handle',
                    models.CharField(
                        blank=True, max_length=128, null=True, unique=True
                    ),
                ),
                ('age', models.IntegerField(db_index=True, null=True)),
                (
                    'gender',
                    models.CharField(
                        choices=[
                            ('male', 'Male'),
                            ('female', 'Female'),
                            ('transgender', 'Transgender'),
                            ('prefer_not_to_say', 'Prefer not to say'),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    'level',
                    models.IntegerField(
                        choices=[
                            (1, 'Individual Contributor, Associate'),
                            (2, 'Individual Contributor'),
                            (3, 'Individual Contributor, Senior'),
                            (4, 'Individual Contributor, Staff'),
                            (5, 'Individual Contributor, Principal'),
                            (6, 'Manager'),
                            (7, 'Director'),
                            (8, 'Director, Senior'),
                            (9, 'VP'),
                            (10, 'VP, Senior'),
                            (11, 'C-Suite'),
                            (12, 'Founder'),
                        ],
                        null=True,
                    ),
                ),
                (
                    'current_pfm',
                    models.CharField(
                        choices=[
                            ('mint', 'Mint'),
                            ('rocket money', 'Rocket Money'),
                            ('quicken', 'Quicken'),
                            ('chime', 'Chime'),
                            ('splitwise', 'Splitwise'),
                            ('pen paper', 'Pen & paper'),
                            ('none', 'None'),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    'inc_primary_annual',
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                    ),
                ),
                ('inc_primary_tax_fed', models.FloatField(default=None, null=True)),
                ('inc_primary_tax_state', models.FloatField(default=None, null=True)),
                (
                    'inc_variable_monthly',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                ('inc_variable_tax_fed', models.FloatField(default=None, null=True)),
                ('inc_variable_tax_state', models.FloatField(default=None, null=True)),
                (
                    'inc_secondary_monthly',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                ('inc_secondary_tax_fed', models.FloatField(default=None, null=True)),
                ('inc_secondary_tax_state', models.FloatField(default=None, null=True)),
                (
                    'exp_housing',
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    'exp_other_fixed',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    'exp_other_variable',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    'sav_retirement',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    'sav_market',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    'inc_total_annual',
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    'net_monthly_profit_loss',
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        default=None,
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    'assets_savings',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=14, null=True
                    ),
                ),
                (
                    'assets_property',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=14, null=True
                    ),
                ),
                (
                    'assets_misc',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    'lia_loans',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    'lia_credit_card',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    'lia_misc',
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    'assets_total',
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        default=None,
                        max_digits=14,
                        null=True,
                    ),
                ),
                (
                    'lia_total',
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        default=None,
                        max_digits=14,
                        null=True,
                    ),
                ),
                (
                    'net_worth',
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        default=None,
                        max_digits=14,
                        null=True,
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'industry',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='users',
                        to='authentication.industry',
                    ),
                ),
                (
                    'job_title',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='users',
                        to='authentication.jobtitle',
                    ),
                ),
                (
                    'metro',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='users',
                        to='authentication.metropolitanarea',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
